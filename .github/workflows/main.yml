name: CI

on:
  push:
    branches:
      - "entropy"
  pull_request:
    branches:
      - "*"

defaults:
  run:
    shell: bash

env:
  # go needs absolute directories, using the $HOME variable doesn't work here.
  GOCACHE: /home/runner/work/go/pkg/build
  GOPATH: /home/runner/work/go
  DOWNLOAD_CACHE: /home/runner/work/download_cache
  BITCOIN_VERSION: 0.20.1

  # If you change this value, please change it in the following files as well:
  # /.travis.yml
  # /Dockerfile
  # /dev.Dockerfile
  # /.github/workflows/release.yml
  GO_VERSION: 1.15.6

jobs:
  ########################
  # RPC compilation check
  ########################
  rpc-check:
    name: RPC compilation check
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            pool-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: '~${{ env.GO_VERSION }}'

      - name: download cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/download_cache
          key: pool-${{ runner.os }}-download-${{ hashFiles('**/install_travis_proto.sh') }}
          restore-keys: |
            pool-${{ runner.os }}-download-${{ hashFiles('**/install_travis_proto.sh') }}
            pool-${{ runner.os }}-download-

      - name: install protoc and protobuf libraries
        run: ./scripts/install_travis_proto.sh

      - name: run check
        run: make rpc-check

  ########################
  # lint code
  ########################
  lint:
    name: lint code
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: Fetch all history for linter
        run: git fetch --prune --unshallow

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            pool-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            pool-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: '~${{ env.GO_VERSION }}'

      - name: lint
        run: make lint

  ########################
  # check pinned dependencies
  ########################
  dep-pin:
    name: check pinned dependencies
    runs-on: ubuntu-latest
    strategy:
      # Allow other tests in the matrix to continue if one fails.
      fail-fast: false
      matrix:
        pinned_dep:
          - google.golang.org/grpc v1.24.0
          - github.com/golang/protobuf v1.3.2

    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: ensure dependences at correct version
        run:   if ! grep -q "${{ matrix.pinned_dep }}" go.mod; then echo dependency ${{ matrix.pinned_dep }} should not be altered ; exit 1 ; fi
